name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Test
      run: npm test -- --passWithNoTests

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: build

    # Choose one of the deployment options below based on your hosting provider

    # Option 1: Deploy to GitHub Pages
    - name: Prepare for GitHub Pages
      run: |
        # Create a .nojekyll file to prevent GitHub from using Jekyll
        touch build/.nojekyll
        # Create a copy of index.html as 404.html for client-side routing
        cp build/index.html build/404.html

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build
        branch: gh-pages
        # Make sure we're not using Jekyll
        clean-exclude: .nojekyll

    # Option 2: Deploy to Azure Static Web Apps
    # - name: Deploy to Azure Static Web Apps
    #   uses: Azure/static-web-apps-deploy@v1
    #   with:
    #     azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     app_location: "build"
    #     skip_app_build: true

    # Option 3: Deploy to AWS S3
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: eu-central-1

    # - name: Deploy to S3
    #   run: |
    #     aws s3 sync build/ s3://your-bucket-name --delete

    # Option 4: Deploy to Netlify
    # - name: Deploy to Netlify
    #   uses: nwtgck/actions-netlify@v1.2
    #   with:
    #     publish-dir: './build'
    #     production-branch: main
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     deploy-message: "Deploy from GitHub Actions"
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
